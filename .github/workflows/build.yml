
name: Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        arch: [amd64, arm64]
        exclude:
          - os: windows-latest
            arch: arm64

    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'

    - name: Get short SHA
      id: sha
      run: echo "sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
    
    - name: Build
      env:
        GOOS: ${{ matrix.os == 'ubuntu-latest' && 'linux' || matrix.os == 'windows-latest' && 'windows' || 'darwin' }}
        GOARCH: ${{ matrix.arch }}
      run: |
        mkdir -p build
        if [ "${{ matrix.os }}" == "windows-latest" ]; then
          go build -o build\\ehost-${{ steps.sha.outputs.sha }}-${{ env.GOOS }}-${{ matrix.arch }}.exe
        else
          go build -o build/ehost-${{ steps.sha.outputs.sha }}-${{ env.GOOS }}-${{ matrix.arch }}
        fi

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      env:
        GOOS: ${{ matrix.os == 'ubuntu-latest' && 'linux' || matrix.os == 'windows-latest' && 'windows' || 'darwin' }}
      with:
        name: ehost-${{ steps.sha.outputs.sha }}-${{ env.GOOS }}-${{ matrix.arch }}
        path: build/*