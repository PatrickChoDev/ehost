
name: Release

on:
  push:
    branches: [ main ]

jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
    steps:
      - uses: google-github-actions/release-please-action@v3
        id: release
        with:
          release-type: go
          package-name: ehost

  release-build:
    needs: release-please
    if: ${{ needs.release-please.outputs.release_created }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        arch: [amd64, arm64]
        exclude:
          - os: windows-latest
            arch: arm64

    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Get version
      id: version
      run: echo "version=$(echo ${{ needs.release-please.outputs.tag_name }} | sed 's/^v//')" >> $GITHUB_OUTPUT

    - name: Build
      env:
        goos: ${{ matrix.os == 'ubuntu-latest' && 'linux' || matrix.os == 'windows-latest' && 'windows' || 'darwin' }}
      run: |
        mkdir -p build
        GOOS=${{ env.goos }} GOARCH=${{ matrix.arch }} go build -o build/ehost-${{ steps.version.outputs.version }}-${{ env.goos }}-${{ matrix.arch }}${{ env.goos == 'windows' && '.exe' || '' }}

    - name: Upload Release Asset
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ needs.release-please.outputs.tag_name }}
        files: build/*